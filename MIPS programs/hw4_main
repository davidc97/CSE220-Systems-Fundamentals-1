.macro push(%reg)
	addi	$sp,	$sp,	-4
	sw      %reg,	0($sp)
.end_macro

.macro pop(%reg)
	lw	%reg, 0($sp)
	addi	$sp,	$sp,	4
.end_macro
.data
test_array: 	.byte '.', 0, '.', 0, '.', 0, '.', 0
		.byte '.', 0, '.', 0, '.', 0, '.', 0
		.byte '.', 0, 'Y', 5, 'R', 6, '.', 0
		.byte 'Y', 1, 'R', 2, 'Y', 3, 'R', 4

.text

.globl main

main:
	################################
	#set_slot
	la $a0, test_array
	li $a1, 4
	li $a2, 4
	li $a3, 3
	li $t0, 7
	li $t1, 'Y'
	li $t2, 0
	push($t0)
	push($t1)
	push($t2)
	jal set_slot
	pop($t2)
	pop($t1)
	pop($t0)
	move $a0, $v0
	#li $v0, 1
	#syscall
	la $a0, test_array
	jal display_board
	li $v0, 10
	syscall
	################################
	
	

.include "hw4.asm"